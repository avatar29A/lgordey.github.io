{"version":3,"file":"static/webpack/static/development/pages/test.js.d2477366c0ae6231dd3d.hot-update.js","sources":["webpack:///./pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport aituBridge from '@btsd/aitu-bridge';\nimport bridge from '@btsd/aitu-bridge';\n\nconst eventType = 'aituEvents';\n\nconst styles = {\n  testWrapper: {\n    width: '100%',\n    maxWidth: 800,\n    margin: '0 auto'\n  },\n  btnWrapper: {\n    padding: 20,\n    border: '2px solid black',\n    marginTop: 20,\n    '& button:not(:first-child)': {\n      marginLeft: 20\n    }\n  }\n};\n\nfunction Test({ classes }) {\n  const [calledMethods, setCalledMethods] = useState([]);\n  const [receivedData, setReceivedData] = useState([]);\n\n  useEffect(() => {\n    handleMethod('InitApps');\n  }, []);\n\n  const handleMethod = async (methodName) => {\n    setCalledMethods(prevArray => [...prevArray, methodName])\n    const data = await aituBridge.invoke(methodName);\n    console.log('__Received__data!', data);\n    setReceivedData(prevArray => [...prevArray, data])\n  }\n\n  return (\n    <div className={classes.testWrapper}>\n      <div className={classes.btnWrapper}>\n        <button onClick={() => handleMethod('getMe')}>getMe</button>\n        <button onClick={() => handleMethod('getPhone')}>getPhone</button>\n      </div>\n      <div style={{ marginTop: 20, display: 'flex' }}>\n        <div style={{ width: '50%' }}>\n          <b style={{ marginBottom: 10 }}>Invoked methods:</b>\n          {calledMethods.map((method, i) => (\n            <div key={i + method}>{i+1 + ') '}{method}</div>\n          ))}\n        </div>\n        <div style={{ width: '50%' }}>\n          <b style={{ marginBottom: 10 }}>Received data:</b>\n          {receivedData && receivedData.map((data, i) => (\n            <div key={i + data}>{i+1 + '. '}{data}</div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Test);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AANA;AACA;AAeA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;;;;A","sourceRoot":""}