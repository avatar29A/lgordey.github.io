{"version":3,"file":"static/webpack/static/development/pages/test.js.0e305cf6b3e47a26bed8.hot-update.js","sources":["webpack:///./pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport withStyles from 'react-jss';\nimport aituBridge from '@btsd/aitu-bridge';\n\nconst styles = {\n  testWrapper: {\n    width: '100%',\n    maxWidth: 800,\n    margin: '0 auto'\n  },\n  btnWrapper: {\n    padding: 20,\n    border: '10px solid black',\n    marginTop: 20,\n    '& button:not(:first-child)': {\n      marginLeft: 20\n    }\n  }\n};\n\nfunction Test({ classes }) {\n  const [calledMethods, setCalledMethods] = useState([]);\n  const [receivedData, setReceivedData] = useState([]);\n  const [receivedError, setReceivedError] = useState([]);\n  const [ errors, setErrors ] = useState([]);\n\n  const handleInvokeMethod = async (methodName) => {\n    setCalledMethods(prevArray => [...prevArray, methodName])\n    try {\n      const data = await aituBridge.invoke(methodName);\n      setReceivedData(prevArray => [...prevArray, JSON.stringify(data)])\n    } catch(e) {\n      setReceivedError(prevArray => [...prevArray, JSON.stringify(e)])\n    }\n  }\n\n  const handleGetGeoMethod = async (methodName) => {\n    if (!aituBridge.supports(methodName)) {\n      setErrors(prevArray => [...prevArray, `Метод \"${methodName}\" не поддерживается в текущей версии приложения`]);\n      return;\n    }\n\n    setCalledMethods(prevArray => [...prevArray, methodName])\n\n    console.log('==handleGetGeoMethod');\n    try {\n      const data = await aituBridge.getGeo();\n      setReceivedData(prevArray => [...prevArray, JSON.stringify(data)])\n    } catch(e) {\n      setReceivedError(prevArray => [...prevArray, JSON.stringify(e)])\n    }\n  }\n\n  const handleOpenSettingsMethod = async (methodName) => {\n    if (!aituBridge.supports(methodName)) {\n      setErrors(prevArray => [...prevArray, `Метод \"${methodName}\" не поддерживается в текущей версии приложения`]);\n      return;\n    }\n\n    setCalledMethods(prevArray => [...prevArray, methodName])\n\n    console.log('==handleOpenSettingsMethod');\n    try {\n      const data = await aituBridge.openSettings();\n      setReceivedData(prevArray => [...prevArray, JSON.stringify(data)])\n    } catch(e) {\n      setReceivedError(prevArray => [...prevArray, JSON.stringify(e)])\n    }\n  }\n\n  const handleShareMethod = async (methodName) => {\n    if (!aituBridge.supports(methodName)) {\n      setErrors(prevArray => [...prevArray, `Метод \"${methodName}\" не поддерживается в текущей версии приложения`]);\n      return;\n    }\n\n    setCalledMethods(prevArray => [...prevArray, methodName])\n\n    console.log('==handleShareMethod');\n    try {\n      const data = await aituBridge.share('privet ya kakaoi-to straniy text ЛАЛА');\n      setReceivedData(prevArray => [...prevArray, JSON.stringify(data)])\n    } catch(e) {\n      setReceivedError(prevArray => [...prevArray, JSON.stringify(e)])\n    }\n  }\n\n  return (\n    <div className={classes.testWrapper}>\n      <div className={classes.btnWrapper}>\n        <button onClick={() => handleInvokeMethod('GetMe')}>GetMe</button>\n        <button onClick={() => handleInvokeMethod('GetPhone')}>GetPhone</button>\n        <button onClick={() => handleInvokeMethod('GetAdminPassword')}>GetAdminPassword</button>\n        <button onClick={() => handleInvokeMethod('GetContacts')}>GetContacts</button>\n        <button onClick={() => handleGetGeoMethod('getGeo')}>aituBridge.getGeo()</button>\n        <button onClick={() => handleOpenSettingsMethod('openSettings')}>openSettings</button>\n      </div>\n      <div className={classes.btnWrapper}>\n        <button onClick={() => handleShareMethod('share')}>aituBridge.share('privet ya kakaoi-to straniy text ЛАЛА')</button>\n      </div>\n      <div className={classes.btnWrapper}>\n        <button onClick={() => handleInvokeMethod('AllowNotifications')}>AllowNotifications</button>\n      </div>\n      <div className={classes.btnWrapper}>\n        <a href=\"javascriptquestions.pdf\">PDF Link</a>\n      </div>\n      javascriptquestions.pdf\n      <div style={{ marginTop: 20 }} >\n        <b>Errors:</b>\n        {errors.map((errMessage, i) => (\n            <div key={i + errMessage}>{errMessage}</div>\n          ))}\n      </div>\n      <div style={{ marginTop: 20, display: 'flex' }}>\n        <div style={{ width: '30%' }}>\n          <b style={{ marginBottom: 10 }}>Invoked methods:</b>\n          {calledMethods.map((method, i) => {\n            return (\n              <div key={i + method}>{i+1 + ') '}{method}</div>\n            );\n          })}\n        </div>\n        <div style={{ width: '30%' }}>\n          <b style={{ marginBottom: 10 }}>Received data:</b>\n          {receivedData && receivedData.map((data, i) => {\n            return (\n              <div key={i + data}>{i+1 + '. '}{data}</div>\n            )\n          })}\n        </div>\n        <div style={{ width: '30%' }}>\n          <b style={{ marginBottom: 10 }}>Received errors:</b>\n          {receivedError && receivedError.map((error, i) => {\n            return (\n              <div key={i + error}>{i+1 + '. '}{error}</div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Test);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AANA;AACA;AAeaA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AADA;AAMA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AAAA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AADA;AAMA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AAAA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AAaA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgsourceRoot":""}